model:
  base_learning_rate: 1.0e-06
  target: modules.multiControlNet.trainer.LoraDreamBooth
  params:
    lora_alpha: 1.0
    lora_dim: 128
    reg_weight: 1.0
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "jpg"
    cond_stage_key: "txt"
    image_size: 64
    channels: 4
    cond_stage_trainable: false
    conditioning_key: crossattn
    monitor: val/loss
    scale_factor: 0.18215
    use_ema: False
    only_mid_control: False

    control_stage_config:
      target: modules.multiControlNet.MultiControlNet
      params:
        control_nets:
          pose_model:
            # the path of the pretrained weight
            weight: ../stable-diffusion-webui/models/ControlNet/control_sd15_openpose.pth
            target: cldm.cldm.ControlNet
            params:
              image_size: 32 # unused
              in_channels: 4
              hint_channels: 3
              model_channels: 320
              attention_resolutions: [ 4, 2, 1 ]
              num_res_blocks: 2
              channel_mult: [ 1, 2, 4, 4 ]
              num_heads: 8
              use_spatial_transformer: True
              transformer_depth: 1
              context_dim: 768
              use_checkpoint: True
              legacy: False
        cond_keys: # the name of the control and the corresponding model
          pose_1: pose_model
          pose_2: pose_model
        image_control_keys: # the name of the control and the corresponding image condition in batch
          pose_1: pose_1
          pose_2: pose_2
        text_control_keys: # the name of the control and the corresponding text embedding in batch
          pose_1: pose_1_text
          pose_2: pose_2_text
    unet_config:
      target: cldm.cldm.ControlledUnetModel
      params:
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_heads: 8
        use_spatial_transformer: True
        transformer_depth: 1
        context_dim: 768
        use_checkpoint: True
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder

data:
  target: data.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 8
    wrap: false

    train:
      target: data.MergeDataset
      params:
        first_character:
          target: data.DreamBoothDataset
          params:
            data_path: /home/lolicon/workspace/dataset/Illya
            size: 512
            set: train
            repeats: 5
        second_character:
          target: data.DreamBoothDataset
          params:
            data_path: /home/lolicon/workspace/dataset/takina
            size: 512
            set: train
            repeats: 5
    reg:
      target: data.DreamBoothDataset
      params:
        data_path: /home/lolicon/workspace/dataset/random
        class_keyword: girl
        size: 512
        set: train
        reg: true
        repeats: 10
        
    validation:
      target: data.MergeDataset
      params:
        first_character:
          target: data.DreamBoothDataset
          params:
            data_path: /home/lolicon/workspace/dataset/Illya
            size: 512
            repeats: 1
        second_character:
          target: data.DreamBoothDataset
          params:
            data_path: /home/lolicon/workspace/dataset/takina
            size: 512
            repeats: 1

lightning:
  modelcheckpoint:
    params:
      every_n_train_steps: 500
  callbacks:
    image_logger:
      target: utils.callbacks.ImageLogger
      params:
        batch_frequency: 100
        max_images: 8
        increase_log_steps: False

  trainer:
    benchmark: True
    max_steps: 50000
    accumulate_grad_batches: 4